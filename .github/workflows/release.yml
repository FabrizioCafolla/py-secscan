name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Action
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          release-type: simple
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

      - name: Checkout pr release branch
        if: ${{ steps.release.outputs.pr }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.release.outputs.pr.baseBranchName }}

      - name: Checkout main code
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v4

      - name: Setup Python
        if: ${{ steps.release.outputs.pr || steps.release.outputs.release_created }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Setup Uv
        if: ${{ steps.release.outputs.pr || steps.release.outputs.release_created }}
        id: setup-uv
        uses: astral-sh/setup-uv@v5

      - name: Bump release
        if: ${{ steps.release.outputs.pr }}
        run: |
          old_version=$(uvx --from=toml-cli toml get --toml-path=pyproject.toml project.version)
          new_version=$(cat version.txt)

          if [ "${old_version}" != "${new_version}" ]; then
            uvx --from=toml-cli toml set --toml-path=pyproject.toml project.version ${new_version}

            git config --global user.email "${{ secrets.ACTION_EMAIL }}"
            git config --global user.name "FabrizioCafolla"

            git add pyproject.toml
            git commit -m "fix(bump-version): Update version to ${new_version}"
            git push
          fi

      - name: Publish release
        if: ${{ steps.release.outputs.release_created }}
        env:
          UV_PUBLISH_USERNAME: ${{ secrets.UV_PUBLISH_USERNAME }}
          UV_PUBLISH_PASSWORD: ${{ secrets.UV_PUBLISH_PASSWORD }}
        run: |
          uv sync
          uv build
          uv publish dist/*.whl
